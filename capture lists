Если честно, все эти примеры выглядят как полный бред. 
Но как я поняла от выариантов weak, strong, unowned зависит цикл жизни переменной

В первом случае переменная, созданная внутри функции не умрет при передаче ее в метод 
(хотя казалось бы с чего ей умирать, если метод находится внутри функции... 
но видимо свифт считает, что раз мы из функции перешли куда-то, то мы уже не в функции.. гений мда)

Во втором случае переменная не привязана к вызову и может просто не вызваться, а может и вызваться.. как повезет
от чего это зависит и зачем это надо они не написали

В третьем случае дословный перевод:
Я уверен, что тейлор (говорится про переменную taylor) всегда будет существовать в течение жизни замыкания, 
которое я возвращаю, поэтому мне не нужно удерживать память, 
но на практике тейлор будет почти сразу уничтожен, поэтому код завершится ошибкой.

Это реально должно нести хоть какой-то смысл?
